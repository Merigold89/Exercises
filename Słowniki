potential_dates = [{"name": "Julia", "gender": "female", "age": 29,                                   # szukanie w słownikach
                    "hobbies": ["jogging", "music"], "city": "Hamburg"},
                   {"name": "Sasha", "gender": "male", "age": 18,
                    "hobbies": ["rock music", "art"], "city": "Berlin"}, 
                   {"name": "Maria", "gender": "female", "age": 35,
                    "hobbies": ["art"], "city": "Berlin"},
                   {"name": "Daniel", "gender": "non-conforming", "age": 50,
                    "hobbies": ["boxing", "reading", "art"], "city": "Berlin"}, 
                   {"name": "John", "gender": "male", "age": 41,
                    "hobbies": ["reading", "alpinism", "museums"], "city": "Munich"}]


def select_dates(pottential_dates):
    names = []
    for person in pottential_dates:
        print(person)
        if person['age'] > 30:
            if person['city'] == 'Berlin':
                if 'art' in person['hobbies']:
                    names.append(person['name'])
    print(', '.join(names))

select_dates(potential_dates)


tracks = {"Woodkid": {"The Golden Age": "Run Boy Run",                                                 # rozpakowanie słowników z ich wydrukowaniem
                      "On the Other Side": "Samara"},
          "Cure": {"Disintegration": "Lovesong",
                   "Wish": "Friday I'm in love"}}
                   
def tracklist(**musics): # funkcja
    for music in musics:
        print(f'{music}')
        for key_album, value_song in musics[music].items():
            print(f"ALBUM: {key_album} TRACK: {value_song}")
            
tracklist(Woodkid={"The Golden Age": "Run Boy Run", # wywołanie funkcji
                   "On the Other Side": "Samara"},
          Cure={"Disintegration": "Lovesong",
                "Wish": "Friday I'm in love"})
                
               
iris = {}                                                                                                # tworzy zbiór (słownik) słowników.

def add_iris(id_n, species, petal_length, petal_width, **kwargs):
    iris[id_n] = {'species': species, 'petal_length': petal_length, 'petal_width': petal_width}
    for _ in kwargs:
        iris[id_n].update(kwargs.items())

add_iris(0, 'Iris versicolor', 4.0, 1.3, petal_hue='pale lilac')  # wywołanie funkcji
print(iris)               
           
def tallest_people(**kwargs):                                                                          # po wywołaniu funkcji z słownikiem, szuka najwyższych osób i je drukuje
    sorted_list = dict(sorted(kwargs.items()))
    for key, value in sorted_list.items():
        most_tall = max(kwargs.values())
        if value == most_tall:
            print(key, ':', value)

tallest_people(Jackie=176, Wilson=185, Saersha=165, Roman=185, Abram=169)
